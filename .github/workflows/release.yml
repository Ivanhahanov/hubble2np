name: Semantic Release

on:
  push:
    branches:
      - ci

jobs:
  release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/git @semantic-release/release-notes-generator conventional-changelog-conventionalcommits @semantic-release/changelog
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: semantic-release $DRY_RUN_OPT
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
  
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      